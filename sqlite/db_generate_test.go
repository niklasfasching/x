
// Code generated by x/sqlite; DO NOT EDIT.
package sqlite_test

import "fmt"
import "github.com/niklasfasching/x/sqlite"


func (v Doc) Row() (map[string]any) {
	return map[string]any{
		"title":v.Title,
		"tags":sqlite.NewJSON(&v.Tags),
		}
}


func (v Doc) PrimaryKey() (string, any) {
	return "ID", v.ID
}


func (v Doc) Cols() []string {
	return []string{
		"id",
		"title",
		"tags",
	}
}

func (v Doc) Schema() string {
	return `
    CREATE TABLE IF NOT EXISTS docs (
        id INTEGER PRIMARY KEY AUTOINCREMENT
        , title 
        , tags JSON_TEXT DEFAULT '[]' NOT NULL 
    );`
}

func (v Doc) ScanRows(rows *sqlite.Rows) (any, error) {
	cols, err := rows.Columns()
	if err != nil {
		return nil, err
	}
	vs, args := []Doc{}, make([]any, len(cols))
	for rows.Next() {
		v := *new(Doc)
		for i, c := range cols {
			switch c {
			case "id":
			args[i] = &v.ID
			case "title":
			args[i] = &v.Title
			case "tags":
			args[i] = sqlite.NewJSON(&v.Tags)
			default:
				args[i] = new(any)
			}
		}
		err := rows.Scan(args...)
		if err != nil {
			return nil, fmt.Errorf("failed to scan row: %w", err)
		}
		vs = append(vs, v)
	}
	return vs, nil
}

